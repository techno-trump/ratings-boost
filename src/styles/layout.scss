@use "./config.scss" as config;
@use "./mixins.scss" as mi;

:root {
	--scroll-width: 17px;
	--scroll-compensation: 0px;
	--container-margin: #{mi.rem(40)};
	--section-space: #{mi.rem(70)};
	@media (max-width: config.$mbpT) {
		--section-space: 55px;
	}
	@media (max-width: config.$mbpM) {
		--section-space: 40px;
		--container-margin: 16px;
	}
}
.section-space-bottom, .section-space {
	padding-bottom: var(--section-space);
}
.section-space-top, .section-space {
	padding-top: var(--section-space);
}
html {
	&.is-mobile {
		--scroll-width: 0px;
	}
}
html.scroll-lock-by-drawer, .fslightbox-open {
	--scroll-compensation: var(--scroll-width);
	padding-right: var(--scroll-width);
	overflow: hidden;
}
body {
	flex: 1 1 auto;
	display: flex;
	flex-direction: column;
	min-height: 100%;
}
body main {
	flex: 1 1 auto;
}
.container {
	&_wide {
		margin: 0 var(--container-margin);
	}
	&_short {
		margin: auto;
		max-width: mi.rem(1320);
		width: 100%;
	}
}

.flex-even {
	&__inner {
		display: flex;
		flex-wrap: wrap;
		justify-content: var(--justify-content);
		margin-left: calc(var(--row-gap, var(--gap, 0)) * -1);
		margin-top: calc(var(--column-gap, var(--gap, 0)) * -1);
	}
	&__item {
		flex: 0 0 var(--item-flex-basis);
		padding-left: var(--row-gap, var(--gap, 0));
		padding-top: var(--column-gap, var(--gap, 0));
	}
}
.section {
	&__title {
		font-weight: 500;
		font-style: Medium;
		font-size: mi.rem(40);
		line-height: 1.3;
		@include mi.aval(font-size, 26, 40, "both", 375, 768);
		&_lg {
			@include mi.aval(font-size, 26, 62, "both", 375, 1920);
		}
	}
}
.go-up-btn {
	position: fixed;
	right: mi.rem(40);
	bottom: mi.rem(40);
	@media (max-width: config.$mbpM) {
		display: none;
	}
}